// <auto-generated />
using System;
using FPSBank.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPSBank.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240126185735_UpdateBankAccount123")]
    partial class UpdateBankAccount123
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPSBank.Server.Authentication.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Account.AccountOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOperation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOperation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("AccountOperation");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Account.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditCardCreaditCardId")
                        .HasColumnType("int");

                    b.Property<int>("DollarCardId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditCardCreaditCardId");

                    b.HasIndex("DollarCardId");

                    b.HasIndex("MainCardId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Cards.CreditCard", b =>
                {
                    b.Property<int>("CreaditCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreaditCardId"));

                    b.Property<string>("NumberCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CreaditCardId");

                    b.ToTable("CreditCard");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Cards.DollarCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumberCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DollarCard");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Cards.MainCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumberCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MainCard");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Account.AccountOperation", b =>
                {
                    b.HasOne("FPSBank.Shared.Models.Account.BankAccount", null)
                        .WithMany("AccountOperations")
                        .HasForeignKey("BankAccountId");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Account.BankAccount", b =>
                {
                    b.HasOne("FPSBank.Shared.Models.Cards.CreditCard", "CreditCard")
                        .WithMany()
                        .HasForeignKey("CreditCardCreaditCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPSBank.Shared.Models.Cards.DollarCard", "DollarCard")
                        .WithMany()
                        .HasForeignKey("DollarCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPSBank.Shared.Models.Cards.MainCard", "MainCard")
                        .WithMany()
                        .HasForeignKey("MainCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditCard");

                    b.Navigation("DollarCard");

                    b.Navigation("MainCard");
                });

            modelBuilder.Entity("FPSBank.Shared.Models.Account.BankAccount", b =>
                {
                    b.Navigation("AccountOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
